# filename - ios_upgrade.yml
# @author [Lucien Wright]
# @create date [03-02-2024]
# @desc [Automation - Ansible Playbook to upgrade Cisco IOS]

---

# Ansible Playbook to upgrade Cisco IOS 

- name: Upgrade CISCO IOS 
  hosts: cmiNet

  vars: 
    upgrade_ios_version: 15.2(7)E9

  tasks:
    - name: CHECK CURRENT VERSION
      ios_facts:

    - debug: 
        msg: 
        - "Current version is {{ ansible_net_version }}"
        - "Upgrade image is 15.2.7E9"

    - debug: 
        msg: 
        - "Image is not compliant and will be upgraded"

      when: ansible_net_version != upgrade_ios_version

## Backup Running Config 

- hosts: cmiNet

  tasks:
   - name: backup config
     ios_command:
       commands: show run
     register: config

   - name: Save output to CMI Backup folder
     copy:
       content: "{{ config.stdout[0] }}"
       dest: /media/cmiNet/{{ ansible_net_hostname }}.txt

## SAVE the Running Config

   - name: Save running config 
     ios_config:
       save_when: always 

## Copy software to target device 

   - name: Copy Image // This could take up to 4 minutes
     net_put: 
      #  src: "/media/netAdmin/tftp_netAdmin/c1000-universalk9-mz.152-7.E9.bin"
       src: "/etc/ansible/misc/c1000-universalk9-mz.152-7.E9.bin"
       dest: "flash:/c1000-universalk9-mz.152-7.E9.bin"
     vars: 
       ansible_command_timeout: 600

## Change the Boot Variable to the new image 

   - name: Change Boot Variable to new image 
     ios_config: 
       commands: 
         - "boot system c1000-universalk9-mz.152-7.E9.bin"
       save_when: always 

## Reload the device 

   - name: Reload the Device 
     cli_command: 
       command: reload
       prompt: 
         - confirm
       answer: 
         - 'y'

## Wait for Reachability to the device 

   - name: Wait for device to come back online
     wait_for:
       host: "{{ inventory_hostname }}"
       port: 22     
       delay: 90
     delegate_to: localhost

## Check current image 

   - name: Check Image Version      
     ios_facts:

   - debug: 
       msg: 
         - "Current version is {{ ansible_net_version }}"

   - name: ASSERT THAT THE IOS VERSION IS CORRECT

     vars: 
       upgrade_ios_version: 15.2(7)E9

     assert:
       that:
         - upgrade_ios_version == ansible_net_version
   - debug: 
       msg: 
         - "Software Upgrade has been completed"
