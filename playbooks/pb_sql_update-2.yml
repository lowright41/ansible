# filename - pb_sql_update.yml
# @author [Lucien Wright]
# @create date [05-17-2025]
# @desc [Update SQL Inentory w/ Device Info]
# Recommended run command: 
# ansible-playbook -i ./inventories/ --limit 'all' -f 40 ./playbooks/pb_sql_update.yml

---
- name: Gather device info and conditionally update MySQL inventory
  hosts: all
  gather_facts: false
  collections:
    - community.mysql
    - cisco.ios

  tasks:
    - name: Gather IOS facts (for model & serial)
      cisco.ios.ios_facts:
      register: netfacts

    - name: Run 'show version' so we can parse OS version
      ios_command:
        commands: show version
      register: ver

    - name: Always set serial & model from ios_facts
      set_fact:
        serial: "{{ netfacts.ansible_facts.ansible_net_serialnum }}"
        model:  "{{ netfacts.ansible_facts.ansible_net_model   }}"

    # - name: Debug model type
    #   debug:
    #     msg: "Model='{{ model }}' | type={{ model | type_debug }}"

    - name: Try to parse OS version
      set_fact:
        os_version_list: "{{ ver.stdout[0] | regex_findall('Version\\s+([\\d\\(\\)\\.A-Za-z]+)') }}"

    - name: If we found an OS version, set os_version
      set_fact:
        os_version: "{{ os_version_list[0] }}"
      when: os_version_list|length > 0

    # Good but leaves a space before and after iosxe ... See TRIM statement below

    - name: If we have os_version, derive os_type
      set_fact:
        os_type: >-
          {% set ver = ansible_net_iostype %}
          {% if 'XE' in ver %}iosxe
          {% elif 'NX-OS' in ver %}nxos
          {% else %}ios
          {% endif %}
        when: os_version is defined

    # Now do one UPDATE per column, but only run the os_* ones if defined:

    - name: Update serial in CMI.net
      community.mysql.mysql_query:
        config_file: ""
        login_host:     "{{ mysql_host }}"
        login_port:     "{{ mysql_port }}"
        login_user:     "{{ mysql_user }}"
        login_password: "{{ mysql_password }}"
        login_db:       "{{ mysql_db }}"
        query: >
          UPDATE net
          SET serial = '{{ serial }}'
          WHERE device = '{{ inventory_hostname }}';
      delegate_to: localhost

    - name: Update model in CMI.net
      community.mysql.mysql_query:
        config_file: ""
        login_host:     "{{ mysql_host }}"
        login_port:     "{{ mysql_port }}"
        login_user:     "{{ mysql_user }}"
        login_password: "{{ mysql_password }}"
        login_db:       "{{ mysql_db }}"
        query: >
          UPDATE net
          SET model = '{{ model }}'
          WHERE device = '{{ inventory_hostname }}';
      delegate_to: localhost

    - name: Update os_ver in CMI.net (if we parsed one)
      community.mysql.mysql_query:
        config_file: ""
        login_host:     "{{ mysql_host }}"
        login_port:     "{{ mysql_port }}"
        login_user:     "{{ mysql_user }}"
        login_password: "{{ mysql_password }}"
        login_db:       "{{ mysql_db }}"
        query: >
          UPDATE net
          SET os_ver = '{{ os_version }}'
          WHERE device = '{{ inventory_hostname }}'
      when: os_version is defined
      delegate_to: localhost

    - name: Update os_type in CMI.net (if derived)
      community.mysql.mysql_query:
        config_file: ""
        login_host:     "{{ mysql_host }}"
        login_port:     "{{ mysql_port }}"
        login_user:     "{{ mysql_user }}"
        login_password: "{{ mysql_password }}"
        login_db:       "{{ mysql_db }}"
        query: >
          UPDATE net
          SET os_type = '{{ os_type }}'
          WHERE device = '{{ inventory_hostname }}';
      when: os_type is defined
      delegate_to: localhost

    - name: Set model-to-platform map
      set_fact:
        model_platform_map:
          C9200L-48P-4X: cisco_9200l
          C9200L-48P-4G: cisco_9200l
          C9200L-24P-4G: cisco_9200l
          C9200CX-8P-2X2G: cisco_9200cx
          WS-C2960X-24PS-L: cisco_2960x
          WS-C3560CX-12PC-S: cisco_3560cx
          WS-C3560CG-8PC-S: cisco_3560cg
          WS-C3650-48PS: cisco_3650
          WS-C3650-24PS: cisco_3650
          WS-C3750X-24P: cisco_3750x
          WS-C3850-48P: cisco_3850
          WS-C3850-24S: cisco_3850
          WS-C4500X-16: cisco_4500x
          C9500-16X: cisco_9500
          C9300-24P: cisco_9300
          C9300-24H: cisco_9300
          C9200-48P: cisco_9200
          C9200-24P: cisco_9200
          C1000-48P-4X-L: cisco_1000
          C1000-24P-4G-L: cisco_1000
          C1000-16T-2G-L: cisco_1000

    - name: Set platform from model
      set_fact:
        platform: "{{ model_platform_map[model] | default('unknown') }}"

    - name: Update platform in CMI.net (based on model)
      community.mysql.mysql_query:
        config_file: ""
        login_host:     "{{ mysql_host }}"
        login_port:     "{{ mysql_port }}"
        login_user:     "{{ mysql_user }}"
        login_password: "{{ mysql_password }}"
        login_db:       "{{ mysql_db }}"
        query: >
          UPDATE net
          SET platform = '{{ platform }}'
          WHERE device = '{{ inventory_hostname }}';
      delegate_to: localhost

    - name: Trim any stray whitespace from os_type column across all devices
      community.mysql.mysql_query:
        config_file: ""
        login_host:     "{{ mysql_host }}"
        login_port:     "{{ mysql_port }}"
        login_user:     "{{ mysql_user }}"
        login_password: "{{ mysql_password }}"
        login_db:       "{{ mysql_db }}"
        query: |
          UPDATE net
          SET os_type = TRIM(os_type),
              role = TRIM(role);

      delegate_to: localhost
      run_once: true
